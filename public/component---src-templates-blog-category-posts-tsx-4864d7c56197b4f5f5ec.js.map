{"version":3,"sources":["webpack:///./src/templates/BlogCategoryPosts.tsx"],"names":["BlogCategoryPostsPage","props","group","pathContext","site","title","siteMetadata","description","map","node","fluid","featured_media","localFile","childImageSharp","categories","length","filter","category","name","Array","tags","tag","key","slug","className","to","decodeHtmlCharCodes","categoryIndex","type","tagIndex","src","alt","dangerouslySetInnerHTML","__html","excerpt","allInstaNode","align","gutter","xs","sm","md","lg","xl","xxl"],"mappings":"8WAyBaA,G,OAAwB,SAACC,GAAiB,IAC9CC,EAAUD,EAAME,YAAhBD,MACAE,EAF8C,OAE9CA,KAUR,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKC,MAAUD,EAAKE,aAAaD,MAAvB,MAAkCD,EAAKE,aAAaC,YAAeA,YAAaH,EAAKE,aAAaC,cAC3GL,EAAMM,KAAI,YAA8B,IAA3BC,EAA2B,EAA3BA,KACPC,EAA6BD,EAAKE,gBAAkBF,EAAKE,eAAeC,WAAaH,EAAKE,eAAeC,UAAUC,iBAAmBJ,EAAKE,eAAeC,UAAUC,gBAAgBH,MAASD,EAAKE,eAAeC,UAAUC,gBAAgBH,MAAQ,KACnPI,EAAgCL,EAAKK,YAAcL,EAAKK,WAAWC,OAAS,EAAIN,EAAKK,WAAWE,QAAO,SAACC,GAAD,MAAgC,kBAAlBA,EAASC,QAA4B,IAAIC,MAC9JC,EAA0BX,EAAKW,MAAQX,EAAKW,KAAKL,OAAS,EAAIN,EAAKW,KAAKJ,QAAO,SAACK,GAAD,MAAsB,kBAAbA,EAAIH,QAA4B,IAAIC,MAClI,OACC,yBAAKG,IAAKb,EAAKc,KAAMC,UAAU,SAC9B,kBAAC,IAAD,CAAMC,GAAI,SAAWhB,EAAKc,KAAMlB,MAAOI,EAAKc,MAC3C,wBAAIC,UAAU,eAAeE,YAAoBjB,EAAKJ,UAEpDS,GAAcA,EAAWC,OAAS,GAAOK,GAAQA,EAAKL,OAAS,IACjE,yBAAKS,UAAU,0DACbV,EAAWN,KAAI,SAACS,EAAUU,GAC1B,OACC,uBAAKL,IAAKK,GACT,kBAAC,IAAD,CAAMF,GAAE,aAAeR,EAASM,KAAQlB,MAAOY,EAASC,MACvD,uBAAMU,KAAK,WAAYX,EAASC,UAKnCE,EAAKZ,KAAI,SAACa,EAAKQ,GACf,OACC,uBAAKP,IAAKO,GACT,kBAAC,IAAD,CAAMJ,GAAE,QAAUJ,EAAIE,KAAQlB,MAAOgB,EAAIH,MACxC,uBAAMU,KAAK,QAASP,EAAIH,WAO9B,kBAAC,IAAD,CAAMO,GAAI,SAAWhB,EAAKc,KAAMlB,MAAOI,EAAKc,MACzCb,GAASA,EAAMoB,KAAOpB,EAAMoB,IAAIf,OAAS,GAAM,kBAAC,IAAD,CAAOL,MAAOA,EAAOqB,IAAKtB,EAAKJ,MAAOA,MAAOI,EAAKJ,SAEpG,yBAAKmB,UAAU,eAAeQ,wBAAyB,CAAEC,OAAQP,YAAoBjB,EAAKyB,gBAI7F,kBAAC,IAAD,CAAWC,aAAclC,EAAME,YAAYgC,eAC3C,uBAAKP,KAAK,OAAOQ,MAAM,SAASC,OAAQ,GAAIb,UAAU,mBACrD,uBAAKc,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,GAAInB,UAAU,gBAC/D,kBAAC,IAAD,OAED,uBAAKc,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,GAAInB,UAAU,gBAC/D,kBAAC,IAAD,WAOUxB,a","file":"component---src-templates-blog-category-posts-tsx-4864d7c56197b4f5f5ec.js","sourcesContent":["import React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\nimport { Tag, Row, Col, Icon } from 'antd';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nimport Instagram from '../components/Instagram';\nimport Twitter from '../components/Twitter';\nimport Facebook from '../components/Facebook';\n\nimport { Post, CategoryTagInfo, InstagramFeed } from '../contracts/post';\nimport { decodeHtmlCharCodes } from '../utils';\n\nimport './Blog.scss';\n\nexport interface Props {\n\tpathContext: {\n\t\tgroup: { node: Post }[];\n\t\tallInstaNode: InstagramFeed;\n\t};\n}\n\nexport const BlogCategoryPostsPage = (props: Props) => {\n\tconst { group } = props.pathContext;\n\tconst { site } = useStaticQuery(graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n\t`);\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={`${site.siteMetadata.title} | ${site.siteMetadata.description}`} description={site.siteMetadata.description} />\n\t\t\t{group.map(({ node }: { node: Post }) => {\n\t\t\t\tconst fluid: FluidObject | null = (node.featured_media && node.featured_media.localFile && node.featured_media.localFile.childImageSharp && node.featured_media.localFile.childImageSharp.fluid) ? node.featured_media.localFile.childImageSharp.fluid : null;\n\t\t\t\tconst categories: CategoryTagInfo[] = node.categories && node.categories.length > 0 ? node.categories.filter((category) => category.name !== 'Uncategorized') : new Array<CategoryTagInfo>();\n\t\t\t\tconst tags: CategoryTagInfo[] = node.tags && node.tags.length > 0 ? node.tags.filter((tag) => tag.name !== 'Uncategorized') : new Array<CategoryTagInfo>();\n\t\t\t\treturn (\n\t\t\t\t\t<div key={node.slug} className=\"posts\">\n\t\t\t\t\t\t<Link to={'/post/' + node.slug} title={node.slug}>\n\t\t\t\t\t\t\t<h1 className=\"black-color\">{decodeHtmlCharCodes(node.title)}</h1>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t{((categories && categories.length > 0) || (tags && tags.length > 0)) && (\n\t\t\t\t\t\t\t<div className=\"categories-container tags-container margin-bottom-24px\">\n\t\t\t\t\t\t\t\t{categories.map((category, categoryIndex) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Tag key={categoryIndex}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/category/${category.slug}`} title={category.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon type=\"folder\" />{category.name}\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t{tags.map((tag, tagIndex) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Tag key={tagIndex}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/tag/${tag.slug}`} title={tag.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon type=\"tag\" />{tag.name}\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Link to={'/post/' + node.slug} title={node.slug}>\n\t\t\t\t\t\t\t{(fluid && fluid.src && fluid.src.length > 0) && <Image fluid={fluid} alt={node.title} title={node.title} />}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className=\"post-excerpt\" dangerouslySetInnerHTML={{ __html: decodeHtmlCharCodes(node.excerpt) }} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<Instagram allInstaNode={props.pathContext.allInstaNode} />\n\t\t\t<Row type=\"flex\" align=\"middle\" gutter={36} className=\"margin-top-36px\">\n\t\t\t\t<Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12} className=\"align-center\">\n\t\t\t\t\t<Twitter />\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12} className=\"align-center\">\n\t\t\t\t\t<Facebook />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Layout>\n\t);\n};\n\nexport default BlogCategoryPostsPage;\n"],"sourceRoot":""}